// Generated from java-escape by ANTLR 4.11.1
package calculadora.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class CalculadoraLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, FOR=8, OR=9, AND=10, 
		BOOL=11, IF=12, ELSE=13, TYPE=14, MAYOR=15, MAYORIGUAL=16, MENOR=17, MENORIGUAL=18, 
		DIFERENTEDE=19, IGUALQUE=20, POTENCIA=21, MAS=22, POR=23, MENOS=24, ENTRE=25, 
		EQUALS=26, PRINT=27, ID=28, STRING=29, NUM=30, ARG=31, ENDL=32, IGNORE=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "FOR", "OR", 
			"AND", "BOOL", "IF", "ELSE", "TYPE", "MAYOR", "MAYORIGUAL", "MENOR", 
			"MENORIGUAL", "DIFERENTEDE", "IGUALQUE", "POTENCIA", "MAS", "POR", "MENOS", 
			"ENTRE", "EQUALS", "PRINT", "ID", "STRING", "NUM", "ARG", "ENDL", "IGNORE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'void '", "'principal'", "'('", "')'", "'{'", "'}'", "', '", "'for'", 
			"'or'", "'and'", null, "'if'", "'else'", null, "'>'", "'>='", "'<'", 
			"'<='", "'!='", "'=='", "'^'", "'+'", "'*'", "'-'", "'/'", "'='", "'console.print'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, "FOR", "OR", "AND", "BOOL", 
			"IF", "ELSE", "TYPE", "MAYOR", "MAYORIGUAL", "MENOR", "MENORIGUAL", "DIFERENTEDE", 
			"IGUALQUE", "POTENCIA", "MAS", "POR", "MENOS", "ENTRE", "EQUALS", "PRINT", 
			"ID", "STRING", "NUM", "ARG", "ENDL", "IGNORE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CalculadoraLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Calculadora.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000!\u00d5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001"+
		"\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0003\ns\b\n\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f"+
		"\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0003"+
		"\r\u0085\b\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001a\u0001\u001b\u0004\u001b\u00b2\b\u001b\u000b\u001b\f\u001b"+
		"\u00b3\u0001\u001c\u0001\u001c\u0004\u001c\u00b8\b\u001c\u000b\u001c\f"+
		"\u001c\u00b9\u0001\u001c\u0001\u001c\u0001\u001d\u0004\u001d\u00bf\b\u001d"+
		"\u000b\u001d\f\u001d\u00c0\u0001\u001d\u0001\u001d\u0004\u001d\u00c5\b"+
		"\u001d\u000b\u001d\f\u001d\u00c6\u0003\u001d\u00c9\b\u001d\u0001\u001e"+
		"\u0004\u001e\u00cc\b\u001e\u000b\u001e\f\u001e\u00cd\u0001\u001f\u0001"+
		"\u001f\u0001 \u0001 \u0001 \u0001 \u0000\u0000!\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!\u0001\u0000\u0006\u0002\u0000AZaz\u0003"+
		"\u0000  AZaz\u0001\u000009\u0003\u000009AZaz\u0001\u0000\n\n\u0003\u0000"+
		"\t\t\r\r  \u00dc\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0001C\u0001\u0000\u0000\u0000\u0003I\u0001"+
		"\u0000\u0000\u0000\u0005S\u0001\u0000\u0000\u0000\u0007U\u0001\u0000\u0000"+
		"\u0000\tW\u0001\u0000\u0000\u0000\u000bY\u0001\u0000\u0000\u0000\r[\u0001"+
		"\u0000\u0000\u0000\u000f^\u0001\u0000\u0000\u0000\u0011b\u0001\u0000\u0000"+
		"\u0000\u0013e\u0001\u0000\u0000\u0000\u0015r\u0001\u0000\u0000\u0000\u0017"+
		"t\u0001\u0000\u0000\u0000\u0019w\u0001\u0000\u0000\u0000\u001b\u0084\u0001"+
		"\u0000\u0000\u0000\u001d\u0086\u0001\u0000\u0000\u0000\u001f\u0088\u0001"+
		"\u0000\u0000\u0000!\u008b\u0001\u0000\u0000\u0000#\u008d\u0001\u0000\u0000"+
		"\u0000%\u0090\u0001\u0000\u0000\u0000\'\u0093\u0001\u0000\u0000\u0000"+
		")\u0096\u0001\u0000\u0000\u0000+\u0098\u0001\u0000\u0000\u0000-\u009a"+
		"\u0001\u0000\u0000\u0000/\u009c\u0001\u0000\u0000\u00001\u009e\u0001\u0000"+
		"\u0000\u00003\u00a0\u0001\u0000\u0000\u00005\u00a2\u0001\u0000\u0000\u0000"+
		"7\u00b1\u0001\u0000\u0000\u00009\u00b5\u0001\u0000\u0000\u0000;\u00be"+
		"\u0001\u0000\u0000\u0000=\u00cb\u0001\u0000\u0000\u0000?\u00cf\u0001\u0000"+
		"\u0000\u0000A\u00d1\u0001\u0000\u0000\u0000CD\u0005v\u0000\u0000DE\u0005"+
		"o\u0000\u0000EF\u0005i\u0000\u0000FG\u0005d\u0000\u0000GH\u0005 \u0000"+
		"\u0000H\u0002\u0001\u0000\u0000\u0000IJ\u0005p\u0000\u0000JK\u0005r\u0000"+
		"\u0000KL\u0005i\u0000\u0000LM\u0005n\u0000\u0000MN\u0005c\u0000\u0000"+
		"NO\u0005i\u0000\u0000OP\u0005p\u0000\u0000PQ\u0005a\u0000\u0000QR\u0005"+
		"l\u0000\u0000R\u0004\u0001\u0000\u0000\u0000ST\u0005(\u0000\u0000T\u0006"+
		"\u0001\u0000\u0000\u0000UV\u0005)\u0000\u0000V\b\u0001\u0000\u0000\u0000"+
		"WX\u0005{\u0000\u0000X\n\u0001\u0000\u0000\u0000YZ\u0005}\u0000\u0000"+
		"Z\f\u0001\u0000\u0000\u0000[\\\u0005,\u0000\u0000\\]\u0005 \u0000\u0000"+
		"]\u000e\u0001\u0000\u0000\u0000^_\u0005f\u0000\u0000_`\u0005o\u0000\u0000"+
		"`a\u0005r\u0000\u0000a\u0010\u0001\u0000\u0000\u0000bc\u0005o\u0000\u0000"+
		"cd\u0005r\u0000\u0000d\u0012\u0001\u0000\u0000\u0000ef\u0005a\u0000\u0000"+
		"fg\u0005n\u0000\u0000gh\u0005d\u0000\u0000h\u0014\u0001\u0000\u0000\u0000"+
		"ij\u0005t\u0000\u0000jk\u0005r\u0000\u0000kl\u0005u\u0000\u0000ls\u0005"+
		"e\u0000\u0000mn\u0005f\u0000\u0000no\u0005a\u0000\u0000op\u0005l\u0000"+
		"\u0000pq\u0005s\u0000\u0000qs\u0005e\u0000\u0000ri\u0001\u0000\u0000\u0000"+
		"rm\u0001\u0000\u0000\u0000s\u0016\u0001\u0000\u0000\u0000tu\u0005i\u0000"+
		"\u0000uv\u0005f\u0000\u0000v\u0018\u0001\u0000\u0000\u0000wx\u0005e\u0000"+
		"\u0000xy\u0005l\u0000\u0000yz\u0005s\u0000\u0000z{\u0005e\u0000\u0000"+
		"{\u001a\u0001\u0000\u0000\u0000|}\u0005i\u0000\u0000}~\u0005n\u0000\u0000"+
		"~\u0085\u0005t\u0000\u0000\u007f\u0080\u0005f\u0000\u0000\u0080\u0081"+
		"\u0005l\u0000\u0000\u0081\u0082\u0005o\u0000\u0000\u0082\u0083\u0005a"+
		"\u0000\u0000\u0083\u0085\u0005t\u0000\u0000\u0084|\u0001\u0000\u0000\u0000"+
		"\u0084\u007f\u0001\u0000\u0000\u0000\u0085\u001c\u0001\u0000\u0000\u0000"+
		"\u0086\u0087\u0005>\u0000\u0000\u0087\u001e\u0001\u0000\u0000\u0000\u0088"+
		"\u0089\u0005>\u0000\u0000\u0089\u008a\u0005=\u0000\u0000\u008a \u0001"+
		"\u0000\u0000\u0000\u008b\u008c\u0005<\u0000\u0000\u008c\"\u0001\u0000"+
		"\u0000\u0000\u008d\u008e\u0005<\u0000\u0000\u008e\u008f\u0005=\u0000\u0000"+
		"\u008f$\u0001\u0000\u0000\u0000\u0090\u0091\u0005!\u0000\u0000\u0091\u0092"+
		"\u0005=\u0000\u0000\u0092&\u0001\u0000\u0000\u0000\u0093\u0094\u0005="+
		"\u0000\u0000\u0094\u0095\u0005=\u0000\u0000\u0095(\u0001\u0000\u0000\u0000"+
		"\u0096\u0097\u0005^\u0000\u0000\u0097*\u0001\u0000\u0000\u0000\u0098\u0099"+
		"\u0005+\u0000\u0000\u0099,\u0001\u0000\u0000\u0000\u009a\u009b\u0005*"+
		"\u0000\u0000\u009b.\u0001\u0000\u0000\u0000\u009c\u009d\u0005-\u0000\u0000"+
		"\u009d0\u0001\u0000\u0000\u0000\u009e\u009f\u0005/\u0000\u0000\u009f2"+
		"\u0001\u0000\u0000\u0000\u00a0\u00a1\u0005=\u0000\u0000\u00a14\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a3\u0005c\u0000\u0000\u00a3\u00a4\u0005o\u0000\u0000"+
		"\u00a4\u00a5\u0005n\u0000\u0000\u00a5\u00a6\u0005s\u0000\u0000\u00a6\u00a7"+
		"\u0005o\u0000\u0000\u00a7\u00a8\u0005l\u0000\u0000\u00a8\u00a9\u0005e"+
		"\u0000\u0000\u00a9\u00aa\u0005.\u0000\u0000\u00aa\u00ab\u0005p\u0000\u0000"+
		"\u00ab\u00ac\u0005r\u0000\u0000\u00ac\u00ad\u0005i\u0000\u0000\u00ad\u00ae"+
		"\u0005n\u0000\u0000\u00ae\u00af\u0005t\u0000\u0000\u00af6\u0001\u0000"+
		"\u0000\u0000\u00b0\u00b2\u0007\u0000\u0000\u0000\u00b1\u00b0\u0001\u0000"+
		"\u0000\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3\u00b1\u0001\u0000"+
		"\u0000\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b48\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b7\u0005\"\u0000\u0000\u00b6\u00b8\u0007\u0001\u0000\u0000"+
		"\u00b7\u00b6\u0001\u0000\u0000\u0000\u00b8\u00b9\u0001\u0000\u0000\u0000"+
		"\u00b9\u00b7\u0001\u0000\u0000\u0000\u00b9\u00ba\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005\"\u0000\u0000\u00bc"+
		":\u0001\u0000\u0000\u0000\u00bd\u00bf\u0007\u0002\u0000\u0000\u00be\u00bd"+
		"\u0001\u0000\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c0\u00be"+
		"\u0001\u0000\u0000\u0000\u00c0\u00c1\u0001\u0000\u0000\u0000\u00c1\u00c8"+
		"\u0001\u0000\u0000\u0000\u00c2\u00c4\t\u0000\u0000\u0000\u00c3\u00c5\u0007"+
		"\u0002\u0000\u0000\u00c4\u00c3\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001"+
		"\u0000\u0000\u0000\u00c6\u00c4\u0001\u0000\u0000\u0000\u00c6\u00c7\u0001"+
		"\u0000\u0000\u0000\u00c7\u00c9\u0001\u0000\u0000\u0000\u00c8\u00c2\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c9\u0001\u0000\u0000\u0000\u00c9<\u0001\u0000"+
		"\u0000\u0000\u00ca\u00cc\u0007\u0003\u0000\u0000\u00cb\u00ca\u0001\u0000"+
		"\u0000\u0000\u00cc\u00cd\u0001\u0000\u0000\u0000\u00cd\u00cb\u0001\u0000"+
		"\u0000\u0000\u00cd\u00ce\u0001\u0000\u0000\u0000\u00ce>\u0001\u0000\u0000"+
		"\u0000\u00cf\u00d0\u0007\u0004\u0000\u0000\u00d0@\u0001\u0000\u0000\u0000"+
		"\u00d1\u00d2\u0007\u0005\u0000\u0000\u00d2\u00d3\u0001\u0000\u0000\u0000"+
		"\u00d3\u00d4\u0006 \u0000\u0000\u00d4B\u0001\u0000\u0000\u0000\t\u0000"+
		"r\u0084\u00b3\u00b9\u00c0\u00c6\u00c8\u00cd\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}